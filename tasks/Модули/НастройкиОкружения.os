#Использовать json
#Использовать logos
#Использовать 1commands
#Использовать asserts

Перем Лог;
Перем ЭтоWindows;


Процедура СкопироватьЗаполнитьШаблон(ИмяФайла, КорневойКаталог) Экспорт

	Чтение = Новый ЧтениеТекста(ИмяФайла);
	ТекстФайлаШаблона = Чтение.Прочитать();
	Чтение.Закрыть();

	ТекстФайлаШаблона = СтрШаблон(ТекстФайлаШаблона, КорневойКаталог);
	Сообщить(ТекстФайлаШаблона);
	Лог.Информация("Скопировали %1 в env.json", ИмяФайла);

	Запись = Новый ЗаписьТекста;
	Запись.Открыть("./env.json");
	Запись.Записать(ТекстФайлаШаблона);
	Запись.Закрыть();

КонецПроцедуры

Процедура ЗаписатьВНастройкиПараметры(СтрокаПодключения, ВерсияПлатформы) Экспорт
	
	Чтение = Новый ЧтениеТекста("./env.json");
	JsonСтрока  = Чтение.Прочитать();
	Чтение.Закрыть();
	Чтение = Неопределено;
	ПарсерJSON  = Новый ПарсерJSON();
	Результат   = ПарсерJSON.ПрочитатьJSON(JsonСтрока);
	Если Результат.Получить("default") <> Неопределено Тогда

		Результат["default"].Вставить("--ibconnection", СтрокаПодключения );
		Результат["default"].Вставить("--v8version", ВерсияПлатформы );
		
		JsonСтрока = ПарсерJSON.ЗаписатьJSON(Результат);
		Запись = Новый ЗаписьТекста;
		Запись.Открыть("./env.json");
		Запись.Записать(JsonСтрока);
		Запись.Закрыть();
	
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьЛог() Экспорт
	Если Лог = Неопределено Тогда
		Лог = Логирование.ПолучитьЛог(ИмяЛога());
		//Лог.УстановитьРаскладку(ЭтотОбъект);
	КонецЕсли;
	Возврат Лог;
КонецФункции

Функция ИмяЛога() Экспорт
	Возврат "oscript.app.add";
КонецФункции

Лог = ПолучитьЛог();

СистемнаяИнформация = Новый СистемнаяИнформация;
ЭтоWindows = Найти(ВРег(СистемнаяИнформация.ВерсияОС), "WINDOWS") > 0;
