sudo: required

services:
  - docker

addons:
  apt:
    packages:
      # 7z is used for packaging (see before_deploy)
      - p7zip-full


cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'
    - '$HOME/docker'
before_cache: 
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'


before_install:
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  # Fetch base image and build new container
  - docker images -a --filter=reference='onec32/client:8.3.10.2639' --format '{{.ID}}' || wget -nv --continue -O - $URL_TARCLIENT | xz -d | docker load
  #- wget --continue -O ./build/client32.tar.xz $URL_TARCLIENT
  #- xz -dc ./build/client32.tar.xz | docker load
  - docker pull wernight/ngrok
  - docker images | grep onec

script:
  - sudo docker run --detach -e XVFB_RESOLUTION=1920x1080x24 --volume="${PWD}":/home/ubuntu/code onec32/client:8.3.10.2466 client > /tmp/container_id
  - sudo docker ps && sleep 5
  - sudo docker run -d -p 4040:4040 --link "$(cat /tmp/container_id)":http wernight/ngrok ngrok http http:6080 > /tmp/container_idngrok
  - sleep 5 && echo $(curl -s http://127.0.0.1:4040/status | grep -P "http://.*?ngrok.io" -oh)"/vnc_auto.html"
  - sudo docker exec -u ubuntu "$(cat /tmp/container_id)" /bin/bash -c "cd /home/ubuntu/code; DISPLAY=:1.0 sudo opm install && sudo opm update -all"
  - sudo docker exec -u ubuntu "$(cat /tmp/container_id)" /bin/bash -c "cd /home/ubuntu/code; DISPLAY=:1.0 sudo opm run init"
  - sudo docker exec -u ubuntu "$(cat /tmp/container_id)" /bin/bash -c "cd /home/ubuntu/code; DISPLAY=:1.0 sudo opm build ./"
  # Clean up
  - sudo docker stop "$(cat /tmp/container_id)"
  - sudo docker stop "$(cat /tmp/container_idngrok )"
  - sudo 7z a add.tar ./.forbuild/features/ ./.forbuild/lib ./.forbuild/locales ./.forbuild/plugins ./.forbuild/vendor ./.forbuild/bddRunner.epf ./.forbuild/xddTestRunner.epf
  - sudo 7z a add.7z ./.forbuild/features/ ./.forbuild/lib ./.forbuild/locales ./.forbuild/plugins ./.forbuild/vendor ./.forbuild/bddRunner.epf ./.forbuild/xddTestRunner.epf
  - sudo 7z a add.tar.gz add.tar
  - sudo 7z a add.tar.bz2 add.tar
  

notifications:
  email: true

deploy:
  provider: releases
  api_key:
    secure: "$GITHUB_OAUTH_TOKEN"
  file:
    - "add.tar.gz"
    - "add.7z"
    - "add-*.ospx"
    - "add.tar.bz2"
  file_glob: "true" 
  skip_cleanup: true
  on:
    tags: true
    branch: master

